# serverless.yml

# Service name
service: custom-serverless-tutorial-service

# Framework version constraint (semver constraint): '3', '^2.33'
frameworkVersion: '3'

# Configuration validation: 'error' (fatal error), 'warn' (logged to the output) or 'off' (default: warn)
# See https://www.serverless.com/framework/docs/configuration-validation
configValidationMode: error

# Load environment variables from .env files (default: false)
# See https://www.serverless.com/framework/docs/environment-variables
useDotenv: true

provider:
  name: aws
  # Default stage (default: dev)
  stage: ${opt:stage, 'sandbox'}
  # Default region (default: us-east-1)
  region: cn-northwest-1
  # Use a custom name for the API Gateway API
  apiName: custom-serverless-tutorial-service-api
  # Endpoint type for API Gateway REST API: edge or regional (default: edge)
  endpointType: REGIONAL
  # Use a custom name for the CloudFormation stack
  stackName: custom-serverless-tutorial-service-stack-${self:provider.stage}
  # Disable automatic rollback by CloudFormation on failure. To be used for non-production environments.
  disableRollback: true
  tracing:
    # Can only be true if API Gateway is inside a stack.
    apiGateway: true
    # Optional, can be true (true equals 'Active'), 'Active' or 'PassThrough'
    lambda: true
  iam:
    role:
      name: custom-serverless-tutorial-service-role-${self:provider.stage}

package:
  patterns:
    - '!**'
    - dist/lambda.js
    - package.json
    - .env*

functions:
  main:
    name: custom-serverless-tutorial-service-${self:provider.stage}
    description: 函数测试服务
    handler: dist/lambda.handler
    timeout: 60
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'